From a4830845bf6991126ab2947af6b4638d0f6cc178 Mon Sep 17 00:00:00 2001
From: Sam Lau <samlau95@gmail.com>
Date: Sun, 5 Apr 2015 23:25:20 -0700
Subject: [PATCH 8/9] Step 8: Listen for game updated event

Fix letters height
---
 components/Hangperson.jsx.es6 | 29 +++++++++++++++--------
 components/Key.jsx.es6        |  6 +++--
 components/Keyboard.jsx.es6   | 54 +++++++++++++++++++++----------------------
 css/style.css                 |  1 +
 js/Hangperson.jsx.js          | 32 ++++++++++++++++---------
 js/Key.jsx.js                 |  6 +++--
 js/Keyboard.jsx.js            | 54 +++++++++++++++++++++----------------------
 7 files changed, 103 insertions(+), 79 deletions(-)

diff --git a/components/Hangperson.jsx.es6 b/components/Hangperson.jsx.es6
index 243b652..153a5c1 100644
--- a/components/Hangperson.jsx.es6
+++ b/components/Hangperson.jsx.es6
@@ -2,24 +2,33 @@ class Hangperson extends React.Component {
   componentWillMount() {
     this.state = { word: "" };
 
-    $.post(create_url(), (data) => {
-      const game = JSON.parse(data);
-      this.setState({
-        id: game.id,
-        word: game.word_with_guesses,
-        guesses: game.guesses,
-        wrong_guesses: game.wrong_guesses,
-      });
+    $.post(create_url(), this.updateGame.bind(this));
+
+    $("#hangperson-container").on("game_updated", this.handleGameUpdated.bind(this));
+  }
+
+  updateGame(data) {
+    const game = JSON.parse(data);
+    this.setState({
+      game_id: this.state.game_id || game.id,
+      word: game.word_with_guesses,
+      guesses: game.guesses,
+      wrong_guesses: game.wrong_guesses,
+      status: game.status
     });
   }
 
+  handleGameUpdated() {
+    $.get(game_url(this.state.game_id), this.updateGame.bind(this));
+  }
+
   render() {
-    const { id, word, guesses, wrong_guesses } = this.state;
+    const { game_id, word, guesses, wrong_guesses } = this.state;
     return (
       <div id="hangperson">
         <Letters word={word} />
         <div className="spacer"></div>
-        <Keyboard id={id} />
+        <Keyboard game_id={game_id} />
       </div>
     )
   }
diff --git a/components/Key.jsx.es6 b/components/Key.jsx.es6
index 4e01c40..bc25350 100644
--- a/components/Key.jsx.es6
+++ b/components/Key.jsx.es6
@@ -5,16 +5,18 @@ class Key extends React.Component {
   }
 
   handleClick() {
-    const { id, value } = this.props;
+    const { game_id, value } = this.props;
     const guess = JSON.stringify({ "guess": value });
 
-    $.post(guess_url(id), guess, (data) => {
+    $.post(guess_url(game_id), guess, (data) => {
       const game = JSON.parse(data);
       if (game.guesses.indexOf(value) === -1) {
         this.setState({ class: "bad" });
       } else {
         this.setState({ class: "good" });
       }
+
+      $("#hangperson-container").trigger("game_updated");
     });
   }
 
diff --git a/components/Keyboard.jsx.es6 b/components/Keyboard.jsx.es6
index 4602d20..e24bb84 100644
--- a/components/Keyboard.jsx.es6
+++ b/components/Keyboard.jsx.es6
@@ -1,48 +1,48 @@
 class Keyboard extends React.Component {
   render() {
-    const id = this.props.id;
+    const game_id = this.props.game_id;
     return (
       <div id="keyboard">
         <ul className="cf" id="qwerty">
           <li><a href="#" className="key c9" id="tab"><span></span></a></li>
-          <Key id={id} value="q" keycode="81"/>
-          <Key id={id} value="w" keycode="87"/>
-          <Key id={id} value="e" keycode="69"/>
-          <Key id={id} value="r" keycode="82"/>
-          <Key id={id} value="t" keycode="84"/>
-          <Key id={id} value="y" keycode="89"/>
-          <Key id={id} value="u" keycode="85"/>
-          <Key id={id} value="i" keycode="73"/>
-          <Key id={id} value="o" keycode="79"/>
-          <Key id={id} value="p" keycode="80"/>
+          <Key game_id={game_id} value="q" keycode="81"/>
+          <Key game_id={game_id} value="w" keycode="87"/>
+          <Key game_id={game_id} value="e" keycode="69"/>
+          <Key game_id={game_id} value="r" keycode="82"/>
+          <Key game_id={game_id} value="t" keycode="84"/>
+          <Key game_id={game_id} value="y" keycode="89"/>
+          <Key game_id={game_id} value="u" keycode="85"/>
+          <Key game_id={game_id} value="i" keycode="73"/>
+          <Key game_id={game_id} value="o" keycode="79"/>
+          <Key game_id={game_id} value="p" keycode="80"/>
           <li><a href="#" className="key c219 alt"><b></b><span></span></a></li>
           <li><a href="#" className="key c221 alt"><b></b><span></span></a></li>
           <li><a href="#" className="key c220 alt"><b></b><span></span></a></li>
         </ul>
         <ul className="cf" id="asdfg">
           <li><a href="#" className="key c20 alt" id="caps"><b></b><span></span></a></li>
-          <Key id={id} value="a" keycode="65"/>
-          <Key id={id} value="s" keycode="83"/>
-          <Key id={id} value="d" keycode="68"/>
-          <Key id={id} value="f" keycode="70"/>
-          <Key id={id} value="g" keycode="71"/>
-          <Key id={id} value="h" keycode="72"/>
-          <Key id={id} value="j" keycode="74"/>
-          <Key id={id} value="k" keycode="75"/>
-          <Key id={id} value="l" keycode="76"/>
+          <Key game_id={game_id} value="a" keycode="65"/>
+          <Key game_id={game_id} value="s" keycode="83"/>
+          <Key game_id={game_id} value="d" keycode="68"/>
+          <Key game_id={game_id} value="f" keycode="70"/>
+          <Key game_id={game_id} value="g" keycode="71"/>
+          <Key game_id={game_id} value="h" keycode="72"/>
+          <Key game_id={game_id} value="j" keycode="74"/>
+          <Key game_id={game_id} value="k" keycode="75"/>
+          <Key game_id={game_id} value="l" keycode="76"/>
           <li><a href="#" className="key c186 alt"><b></b><span></span></a></li>
           <li><a href="#" className="key c222 alt"><b></b><span></span></a></li>
           <li><a href="#" className="key c13 alt" id="enter"><span></span></a></li>
         </ul>
         <ul className="cf" id="zxcvb">
           <li><a href="#" className="key c16 shiftleft"><span></span></a></li>
-          <Key id={id} value="z" keycode="90"/>
-          <Key id={id} value="x" keycode="88"/>
-          <Key id={id} value="c" keycode="67"/>
-          <Key id={id} value="v" keycode="86"/>
-          <Key id={id} value="b" keycode="66"/>
-          <Key id={id} value="n" keycode="78"/>
-          <Key id={id} value="m" keycode="77"/>
+          <Key game_id={game_id} value="z" keycode="90"/>
+          <Key game_id={game_id} value="x" keycode="88"/>
+          <Key game_id={game_id} value="c" keycode="67"/>
+          <Key game_id={game_id} value="v" keycode="86"/>
+          <Key game_id={game_id} value="b" keycode="66"/>
+          <Key game_id={game_id} value="n" keycode="78"/>
+          <Key game_id={game_id} value="m" keycode="77"/>
           <li><a href="#" className="key c188 alt"><b></b><span></span></a></li>
           <li><a href="#" className="key c190 alt"><b></b><span></span></a></li>
           <li><a href="#" className="key c191 alt"><b></b><span></span></a></li>
diff --git a/css/style.css b/css/style.css
index f66c912..d2c88c0 100644
--- a/css/style.css
+++ b/css/style.css
@@ -850,6 +850,7 @@
 .spacer { height: 75px; }
 
 #letters {
+  height: 60px;
   display: flex;
   flex-direction: row;
   justify-content: center;
diff --git a/js/Hangperson.jsx.js b/js/Hangperson.jsx.js
index 20531d4..ef8f7b3 100644
--- a/js/Hangperson.jsx.js
+++ b/js/Hangperson.jsx.js
@@ -20,24 +20,34 @@ var Hangperson = (function (_React$Component) {
   _createClass(Hangperson, {
     componentWillMount: {
       value: function componentWillMount() {
-        var _this = this;
-
         this.state = { word: "" };
 
-        $.post(create_url(), function (data) {
-          var game = JSON.parse(data);
-          _this.setState({
-            id: game.id,
-            word: game.word_with_guesses,
-            guesses: game.guesses,
-            wrong_guesses: game.wrong_guesses });
+        $.post(create_url(), this.updateGame.bind(this));
+
+        $("#hangperson-container").on("game_updated", this.handleGameUpdated.bind(this));
+      }
+    },
+    updateGame: {
+      value: function updateGame(data) {
+        var game = JSON.parse(data);
+        this.setState({
+          game_id: this.state.game_id || game.id,
+          word: game.word_with_guesses,
+          guesses: game.guesses,
+          wrong_guesses: game.wrong_guesses,
+          status: game.status
         });
       }
     },
+    handleGameUpdated: {
+      value: function handleGameUpdated() {
+        $.get(game_url(this.state.game_id), this.updateGame.bind(this));
+      }
+    },
     render: {
       value: function render() {
         var _state = this.state;
-        var id = _state.id;
+        var game_id = _state.game_id;
         var word = _state.word;
         var guesses = _state.guesses;
         var wrong_guesses = _state.wrong_guesses;
@@ -47,7 +57,7 @@ var Hangperson = (function (_React$Component) {
           { id: "hangperson" },
           React.createElement(Letters, { word: word }),
           React.createElement("div", { className: "spacer" }),
-          React.createElement(Keyboard, { id: id })
+          React.createElement(Keyboard, { game_id: game_id })
         );
       }
     }
diff --git a/js/Key.jsx.js b/js/Key.jsx.js
index eb862e5..eeb37fc 100644
--- a/js/Key.jsx.js
+++ b/js/Key.jsx.js
@@ -24,18 +24,20 @@ var Key = (function (_React$Component) {
         var _this = this;
 
         var _props = this.props;
-        var id = _props.id;
+        var game_id = _props.game_id;
         var value = _props.value;
 
         var guess = JSON.stringify({ guess: value });
 
-        $.post(guess_url(id), guess, function (data) {
+        $.post(guess_url(game_id), guess, function (data) {
           var game = JSON.parse(data);
           if (game.guesses.indexOf(value) === -1) {
             _this.setState({ "class": "bad" });
           } else {
             _this.setState({ "class": "good" });
           }
+
+          $("#hangperson-container").trigger("game_updated");
         });
       }
     },
diff --git a/js/Keyboard.jsx.js b/js/Keyboard.jsx.js
index 313d165..3e6fcad 100644
--- a/js/Keyboard.jsx.js
+++ b/js/Keyboard.jsx.js
@@ -20,7 +20,7 @@ var Keyboard = (function (_React$Component) {
   _createClass(Keyboard, {
     render: {
       value: function render() {
-        var id = this.props.id;
+        var game_id = this.props.game_id;
         return React.createElement(
           "div",
           { id: "keyboard" },
@@ -36,16 +36,16 @@ var Keyboard = (function (_React$Component) {
                 React.createElement("span", null)
               )
             ),
-            React.createElement(Key, { id: id, value: "q", keycode: "81" }),
-            React.createElement(Key, { id: id, value: "w", keycode: "87" }),
-            React.createElement(Key, { id: id, value: "e", keycode: "69" }),
-            React.createElement(Key, { id: id, value: "r", keycode: "82" }),
-            React.createElement(Key, { id: id, value: "t", keycode: "84" }),
-            React.createElement(Key, { id: id, value: "y", keycode: "89" }),
-            React.createElement(Key, { id: id, value: "u", keycode: "85" }),
-            React.createElement(Key, { id: id, value: "i", keycode: "73" }),
-            React.createElement(Key, { id: id, value: "o", keycode: "79" }),
-            React.createElement(Key, { id: id, value: "p", keycode: "80" }),
+            React.createElement(Key, { game_id: game_id, value: "q", keycode: "81" }),
+            React.createElement(Key, { game_id: game_id, value: "w", keycode: "87" }),
+            React.createElement(Key, { game_id: game_id, value: "e", keycode: "69" }),
+            React.createElement(Key, { game_id: game_id, value: "r", keycode: "82" }),
+            React.createElement(Key, { game_id: game_id, value: "t", keycode: "84" }),
+            React.createElement(Key, { game_id: game_id, value: "y", keycode: "89" }),
+            React.createElement(Key, { game_id: game_id, value: "u", keycode: "85" }),
+            React.createElement(Key, { game_id: game_id, value: "i", keycode: "73" }),
+            React.createElement(Key, { game_id: game_id, value: "o", keycode: "79" }),
+            React.createElement(Key, { game_id: game_id, value: "p", keycode: "80" }),
             React.createElement(
               "li",
               null,
@@ -90,15 +90,15 @@ var Keyboard = (function (_React$Component) {
                 React.createElement("span", null)
               )
             ),
-            React.createElement(Key, { id: id, value: "a", keycode: "65" }),
-            React.createElement(Key, { id: id, value: "s", keycode: "83" }),
-            React.createElement(Key, { id: id, value: "d", keycode: "68" }),
-            React.createElement(Key, { id: id, value: "f", keycode: "70" }),
-            React.createElement(Key, { id: id, value: "g", keycode: "71" }),
-            React.createElement(Key, { id: id, value: "h", keycode: "72" }),
-            React.createElement(Key, { id: id, value: "j", keycode: "74" }),
-            React.createElement(Key, { id: id, value: "k", keycode: "75" }),
-            React.createElement(Key, { id: id, value: "l", keycode: "76" }),
+            React.createElement(Key, { game_id: game_id, value: "a", keycode: "65" }),
+            React.createElement(Key, { game_id: game_id, value: "s", keycode: "83" }),
+            React.createElement(Key, { game_id: game_id, value: "d", keycode: "68" }),
+            React.createElement(Key, { game_id: game_id, value: "f", keycode: "70" }),
+            React.createElement(Key, { game_id: game_id, value: "g", keycode: "71" }),
+            React.createElement(Key, { game_id: game_id, value: "h", keycode: "72" }),
+            React.createElement(Key, { game_id: game_id, value: "j", keycode: "74" }),
+            React.createElement(Key, { game_id: game_id, value: "k", keycode: "75" }),
+            React.createElement(Key, { game_id: game_id, value: "l", keycode: "76" }),
             React.createElement(
               "li",
               null,
@@ -141,13 +141,13 @@ var Keyboard = (function (_React$Component) {
                 React.createElement("span", null)
               )
             ),
-            React.createElement(Key, { id: id, value: "z", keycode: "90" }),
-            React.createElement(Key, { id: id, value: "x", keycode: "88" }),
-            React.createElement(Key, { id: id, value: "c", keycode: "67" }),
-            React.createElement(Key, { id: id, value: "v", keycode: "86" }),
-            React.createElement(Key, { id: id, value: "b", keycode: "66" }),
-            React.createElement(Key, { id: id, value: "n", keycode: "78" }),
-            React.createElement(Key, { id: id, value: "m", keycode: "77" }),
+            React.createElement(Key, { game_id: game_id, value: "z", keycode: "90" }),
+            React.createElement(Key, { game_id: game_id, value: "x", keycode: "88" }),
+            React.createElement(Key, { game_id: game_id, value: "c", keycode: "67" }),
+            React.createElement(Key, { game_id: game_id, value: "v", keycode: "86" }),
+            React.createElement(Key, { game_id: game_id, value: "b", keycode: "66" }),
+            React.createElement(Key, { game_id: game_id, value: "n", keycode: "78" }),
+            React.createElement(Key, { game_id: game_id, value: "m", keycode: "77" }),
             React.createElement(
               "li",
               null,
-- 
1.8.5

